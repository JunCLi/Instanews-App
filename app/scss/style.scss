/*
=========================
Import styling
=========================
*/

@import './partials/normalize';
@import './partials/fonts';
@import './partials/select';

/*
=========================
General styling
=========================
*/

body {
  overflow-x: hidden;

  margin: 0;

  background-color: black;
  font-size: 16px;
  font-family: 'Open Sans', sans-serif;
}

ul {
  list-style: none;
}

/*
=========================
header styling
=========================
*/

// grid to position icon and section dropdown
header {
  display: grid;
  grid-template-rows: 2fr 1fr;
  grid-template-columns: 1fr;
  justify-items: center;

  padding: 40px 0;
  height: 85vh;

  // animate sliding of header
  transition: height 1s;
}

.nyt-logo {
  align-self: end;
  
  height: 100%;
  max-height: 400px;
  width: 100%;
  max-width: 350px;
}

.select-sections {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  
  h3 {
    color: white;
    font-size: 1.75em;
  } 
}

// class that will apply to shrink header when category is chosen
.shrink-header {
  height: 500px;
}


// change grid to reposition elements on larger screen sizes
@media screen and (min-width: 600px) {
  header {
    grid-template-rows: 1fr;
    grid-template-columns: repeat(2, 1fr);
    align-items: center;
  }

  .nyt-logo {
    align-self: center;
    justify-self: right;
    
    padding: 20px 0; 
  }
  
  .select-sections {
    align-items: start;
    justify-self: left;
  }

  // different shrinking height for larger screen sizes
  .shrink-header {
    height: 250px;
  }
}

// reposition elements to left for desktop size screen
@media screen and (min-width: 1240px) {
  header {
    grid-template-columns: 1fr 1fr 2fr;
  }

  .nyt-logo {
    justify-self: center;
  }

  .select-sections {
    margin-left: 50px;
  }
}

/*
=========================
Main styling
=========================
*/

.loading-gif {
  display: block;
  width: 50%;
  max-width: 400px;
  margin: 0 auto;
}

// create dynamic css variables to maintain aspect ratios of articles
:root {
  // width of entire section + number of cells
  --wrapperWidth: 100vw;
  --numberOfCells: 1;

  // article width and height
  --cellWidth: calc(var(--wrapperWidth) / var(--numberOfCells));
  --cellHeight: var(--cellWidth);
}

main {
  margin: 0;
  
  // using the variables to create dynamic grid
  ul {
    display: grid;
    grid-template-columns: repeat(var(--numberOfCells), 1fr);
    grid-auto-rows: var(--rowHeight);
    
    width: var(--wrapperWidth);
    padding: 0;

    // give list items appropriate height for articles
    li {
      width: var(--cellWidth);
      height: var(--cellHeight);
      background-size: auto 100%;
      background-position: center;
      
      a {
        display: block;
        position: relative;
        overflow: hidden;

        width: 100%;
        height: 100%;

        color: white;

        // when articles are hovered over, will slide article abstract
        &:hover > p {
          height: 50%;
          padding: 5% 7.5%;
          
          font-size: 1.25em;
          color: white;
        }

        // give article abstract a translucent background and hide it until hovered over
        p {
          position: absolute;
          bottom: 0;

          margin: 0;
          padding: 0 7.5%;
          width: 100%;
          height: 0;
          
          font-size: 0;
          background-color: rgba(0, 0, 0, 0.5);
          text-align: center;

          transition: height 1s, padding 1s;
        }
      }
    }
  }
}

// Increase number of cells/columns of articles, change from square to rectangles depending on screen size
@media screen and (min-width: 600px) {
  :root {
    --numberOfCells: 2;
    --cellHeight: calc(var(--cellWidth) * 1.25);
  }
}

@media screen and (min-width: 900px) {
  :root {
    --numberOfCells: 3;
    --cellHeight: calc(var(--cellWidth) * 1.5);
  }
}

@media screen and (min-width: 1240px) {
  :root {
    --numberOfCells: 4;
    --cellHeight: calc(var(--cellWidth) * 1.5);
  }
}

/*
=========================
footer styling
=========================
*/

footer {
  margin: 25px auto 50px;
  width: 95%;
  max-width: 400px;

  color: #c2c2c2;
  font-size: 1.5em;
  text-align: center;
}

// position footer to left for desktop view
@media screen and (min-width: 1240px) {
  footer {
    margin-left: 0;
  }
}

